Escape HTML special characters from a String
-----------------------------------------------------
public static final String escapeHTML(String s){
   StringBuffer sb = new StringBuffer();
   int n = s.length();
   for (int i = 0; i < n; i++) {
      char c = s.charAt(i);
      switch (c) {
         case '<': sb.append("&lt;"); break;
         case '>': sb.append("&gt;"); break;
         case '&': sb.append("&amp;"); break;
         case '"': sb.append("&quot;"); break;
         case 'à': sb.append("&agrave;");break;
         case 'À': sb.append("&Agrave;");break;
         case 'â': sb.append("&acirc;");break;
         case 'Â': sb.append("&Acirc;");break;
         case 'ä': sb.append("&auml;");break;
         case 'Ä': sb.append("&Auml;");break;
         case 'å': sb.append("&aring;");break;
         case 'Å': sb.append("&Aring;");break;
         case 'æ': sb.append("&aelig;");break;
         case 'Æ': sb.append("&AElig;");break;
         case 'ç': sb.append("&ccedil;");break;
         case 'Ç': sb.append("&Ccedil;");break;
         case 'é': sb.append("&eacute;");break;
         case 'É': sb.append("&Eacute;");break;
         case 'è': sb.append("&egrave;");break;
         case 'È': sb.append("&Egrave;");break;
         case 'ê': sb.append("&ecirc;");break;
         case 'Ê': sb.append("&Ecirc;");break;
         case 'ë': sb.append("&euml;");break;
         case 'Ë': sb.append("&Euml;");break;
         case 'ï': sb.append("&iuml;");break;
         case 'Ï': sb.append("&Iuml;");break;
         case 'ô': sb.append("&ocirc;");break;
         case 'Ô': sb.append("&Ocirc;");break;
         case 'ö': sb.append("&ouml;");break;
         case 'Ö': sb.append("&Ouml;");break;
         case 'ø': sb.append("&oslash;");break;
         case 'Ø': sb.append("&Oslash;");break;
         case 'ß': sb.append("&szlig;");break;
         case 'ù': sb.append("&ugrave;");break;
         case 'Ù': sb.append("&Ugrave;");break;         
         case 'û': sb.append("&ucirc;");break;         
         case 'Û': sb.append("&Ucirc;");break;
         case 'ü': sb.append("&uuml;");break;
         case 'Ü': sb.append("&Uuml;");break;
         case '®': sb.append("&reg;");break;         
         case '©': sb.append("&copy;");break;   
         case '€': sb.append("&euro;"); break;
         // be carefull with this one (non-breaking whitee space)
         case ' ': sb.append("&nbsp;");break;         
         
         default:  sb.append(c); break;
      }
   }
   return sb.toString();
}

 
Here another snippet to convert a String to HTML. This one is little bit better because it deals with space versus non-breaking space (&nbsp;) and Unicode characters. Submitted by S. Bayer. 
----------------------------------------------------------------------------------------------------------------

public static String stringToHTMLString(String string) {
    StringBuffer sb = new StringBuffer(string.length());
    // true if last char was blank
    boolean lastWasBlankChar = false;
    int len = string.length();
    char c;

    for (int i = 0; i < len; i++)
        {
        c = string.charAt(i);
        if (c == ' ') {
            // blank gets extra work,
            // this solves the problem you get if you replace all
            // blanks with &nbsp;, if you do that you loss 
            // word breaking
            if (lastWasBlankChar) {
                lastWasBlankChar = false;
                sb.append("&nbsp;");
                }
            else {
                lastWasBlankChar = true;
                sb.append(' ');
                }
            }
        else {
            lastWasBlankChar = false;
            //
            // HTML Special Chars
            if (c == '"')
                sb.append("&quot;");
            else if (c == '&')
                sb.append("&amp;");
            else if (c == '<')
                sb.append("&lt;");
            else if (c == '>')
                sb.append("&gt;");
            else if (c == '\n')
                // Handle Newline
                sb.append("&lt;br/&gt;");
            else {
                int ci = 0xffff & c;
                if (ci < 160 )
                    // nothing special only 7 Bit
                    sb.append(c);
                else {
                    // Not 7 Bit use the unicode system
                    sb.append("&#");
                    sb.append(new Integer(ci).toString());
                    sb.append(';');
                    }
                }
            }
        }
    return sb.toString();
}
 
--------------------------------------------------------------------------------

/*
 * Created on 2004. 2. 20
 */
package chipchat;

/**
 * String utility.
 * @author Mr.Lee
 */
public final class StringUtil {
   /**
    * Convert html special charectors.
    * @param src Source.
    * @return Changed String.
    */
   public static String htmlSpecialChars(final String src) {
      return htmlSpecialChars(new StringBuffer(src)).toString();
   }
   /**
    * Convert html special charectors.
    * @param src Source.
    * @return Changed String.
    */
   public static StringBuffer htmlSpecialChars(final StringBuffer src) {
      if (src == null) {
         return null;
      }
      int srcLength = src.length();

      for (int i = 0; i < srcLength; i++) {
         switch (src.charAt(i)) {
            case '<' :
               src.replace(i, i + 1, "&lt;");
               srcLength += 3;
               i += 3;
               break;
            case '>' :
               src.replace(i, i + 1, "&gt;");
               srcLength += 3;
               i += 3;
               break;
            case '&' :
               src.replace(i, i + 1, "&amp;");
               srcLength += 4;
               i += 4;
               break;
            case '"' :
               src.replace(i, i + 1, "&quot;");
               srcLength += 5;
               i += 5;
               break;
            case '\'' :
               src.replace(i, i + 1, "&#039;");
               srcLength += 5;
               i += 5;
               break;
            default :
               break;
         }
         if (i > 0 && src.charAt(i - 1) == ' ' && src.charAt(i) == ' ') {
            src.replace(i - 1, i, "&nbsp;");
            src.replace(i + 5, i + 6, "&nbsp;");
            srcLength += 10;
            i = i + 10;
         }
      }
      return src;
   }
}
